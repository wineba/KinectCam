name: CI

on: [push]

jobs:
  build:
    runs-on: [windows-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Load SDK Cache
      uses: actions/cache@v1
      with:
        path: KinectSDK-v1.8
        key: KinectSDK-v1.8-Setup
    - name: Download Kinect SDK
      shell: powershell
      run: |
        Set-Location ${{ github.workspace }}
        if (!(Test-Path -PathType Container KinectSDK-v1.8)) {
            Invoke-WebRequest "https://download.microsoft.com/download/E/1/D/E1DEC243-0389-4A23-87BF-F47DE869FC1A/KinectSDK-v1.8-Setup.exe" -OutFile KinectSDK-v1.8-Setup.exe
        }
    - name: Download DirectShow Samples
      run: |
        cd ${{ github.workspace }}
        git clone --depth 1 --no-checkout https://github.com/microsoft/Windows-classic-samples.git directshow
        cd directshow
        git checkout main -- Samples/Win7Samples/multimedia/directshow/baseclasses/
    - name: Install Kinect SDKs
      shell: powershell
      run: |
        Set-Location ${{ github.workspace }}
        # The installer has no unattended installation option, so it will have to be done manually.

        # Unpack the SDK if it hasn't been restored from cache
        if (!(Test-Path -PathType Container KinectSDK-v1.8)) {
            New-Item -ItemType directory KinectSDK-v1.8 | Out-Null
            & "C:\Program Files (x86)\WiX Toolset v3.11\bin\dark.exe" KinectSDK-v1.8-Setup.exe -x KinectSDK-v1.8
        }

        Set-Location KinectSDK-v1.8\AttachedContainer
        Start-Process msiexec -ArgumentList "/i SpeechPlatformRuntime_x64.msi /qn /norestart" -wait
        Start-Process msiexec -ArgumentList "/i MSKinectLangPack_enUS.msi /qn /norestart" -wait
        Start-Process msiexec -ArgumentList "/i KinectDrivers-v1.8-x64.WHQL.msi /qn /norestart" -wait
        Start-Process msiexec -ArgumentList "/i KinectRuntime-v1.8-x64.msi /qn /norestart" -wait
        Start-Process msiexec -ArgumentList "/i KinectSDK-v1.8-x64.msi /qn /norestart" -wait
    - name: Install DirectShow Baseclasses
      run: |
        cd ${{ github.workspace }}\directshow\Samples\Win7Samples
        mkdir "C:\Program Files (x86)\Windows Kits\10\Samples"
        mv .\multimedia\ "C:\Program Files (x86)\Windows Kits\10\Samples"
    - name: Prepare Build
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_SYSTEM_VERSION=10.0.18362.0 ..
    - name: Build Filter
      run: |
        cd build
        cmake --build . --config Release
    - name: Upload Package
      uses: actions/upload-artifact@v1
      with:
        name: KinectCam.ax
        path: build/Release/KinectCam.ax
